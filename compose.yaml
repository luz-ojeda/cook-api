services:
  server:
    build:
      context: .
      target: final
    ports:
      - 8080:80
    environment:
       - ASPNETCORE_ENVIRONMENT=Docker
       - ASPNETCORE_URLS=http://+:80'
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./SqlScripts/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./SqlScripts/insert_recipes.sql:/docker-entrypoint-initdb.d/insert_recipes.sql
      - ./SqlScripts/insert_ingredients.sql:/docker-entrypoint-initdb.d/insert_ingredients.sql
    environment:
      - POSTGRES_DB=cook
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt

